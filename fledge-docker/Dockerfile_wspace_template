# Copyright (C) 2020 Intel Corporation
# Licensed subject to the terms of the separately executed evaluation license agreement between Intel Corporation and you.

# docker build --build-arg HTTPS_PROXY=$HTTPS_PROXY --build-arg HTTP_PROXY=$HTTP_PROXY -t fledge .

ARG BASE_IMAGE=ubuntu:18.04
FROM $BASE_IMAGE

LABEL maintainer "Walter riviera <walter.riviera@intel.com>"

ARG http_proxy
ARG HTTP_PROXY
ARG HTTPS_PROXY
ARG https_proxy
ARG socks_proxy
ARG ftp_proxy
ARG no_proxy

ARG USERNAME
ARG USER_ID
ARG GROUP_ID

ARG FLEDGE_BIN_PATH
ARG FLEDGE_LIB_PATH
ARG WORKSPACE_PATH

ENV http_proxy=$http_proxy
ENV https_proxy=$https_proxy
ENV HTTP_PROXY=$HTTP_PROXY
ENV HTTPS_PROXY=$HTTPS_PROXY
ENV socks_proxy=$socks_proxy
ENV ftp_proxy=$ftp_proxy
ENV no_proxy=$no_proxy


# Run this docker as User
RUN addgroup --gid $GROUP_ID $USERNAME
RUN adduser --disabled-password --gecos '' --uid $USER_ID --gid $GROUP_ID $USERNAME

#########################

ENV install_dir=/usr/fledge/

WORKDIR /home/

COPY fledge-docker/docker_agg.sh /home/.
COPY fledge-docker/docker_col.sh /home/.

# Set locale details
RUN apt-get update
ENV LANG C.UTF-8
ENV LC_ALL C.UTF-8

# Install OpenSSH for MPI to communicate between containers
RUN apt-get install -y ssh
RUN apt-get install -y --no-install-recommends openssh-client openssh-server && \
    mkdir -p /var/run/sshd

# Allow OpenSSH to talk to containers without asking for confirmation
RUN cat /etc/ssh/ssh_config | grep -v StrictHostKeyChecking > /etc/ssh/ssh_config.new && \
    echo "    StrictHostKeyChecking no" >> /etc/ssh/ssh_config.new && \
    mv /etc/ssh/ssh_config.new /etc/ssh/ssh_config

RUN apt-get install -y nano

# Install the fledge package and its dependency.
RUN apt-get update && apt-get install -y --no-install-recommends \
    python3-venv
RUN apt-get install -y python3-pip
RUN pip3 install --upgrade pip

########## Fledge files ##################################################################

# BIN
COPY ${FLEDGE_BIN_PATH}/fx /usr/local/bin/.

####TODO: Modify first line of fx

# LIBs
COPY ${FLEDGE_LIB_PATH}/fledge /usr/local/lib/python3.6/dist-packages/fledge
COPY ${FLEDGE_LIB_PATH}/fledge-workspace /usr/local/lib/python3.6/dist-packages/fledge-workspace
COPY ${FLEDGE_LIB_PATH}/fledge-0.20.dist-info /usr/local/lib/python3.6/dist-packages/fledge-0.20.dist-info

### TODO: freeze env and copy list of requirements
#COPY fl_docker_requirements.txt /home/${USERNAME}/. 
#RUN pip3 install -r /home/${USERNAME}/fl_docker_requirements.txt 

## TODO: delete irrelevant line

##########################################################################################
########## Dockerize cmd Part ############################################################
# This section will be automatically uncommented by the "fx workspace dockerize [...]" cmd

#__RUN mkdir -p /home/workspace
#__COPY ${WORKSPACE_PATH} /home/workspace
#__RUN pip3 install -r /home/workspace/requirements.txt
############# EOF Dockerize ##############################################################


# Setting permissions to run container as user
RUN mkdir -p /home/fledge
RUN chown ${USERNAME} /home/fledge

USER $USERNAME
