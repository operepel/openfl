# Compose an SFL "Simulation FL" plan in JSON/YAML.
# * Plan is consumed by bin/run_sim_from_sflplan.py and 
# *     bin/create_initial_weights_file_from_plan.py 
# * one code path points to get_model function and the other
# *     points to the data object constructor
# * model version is used to validate model updates
# * Aggregator, collaborator, and fed ids as well as model version are currently
# *     used to validate message headers. Collaborator ids are also 
# *     used for identifying the data folder of each collaborator.

# We may have several plans for one dataset, to search the best model architecture for exammple.

task            : brats
version         : '1'
description     : Train a model to perform semantic segmentation on brain fMRI images.
status          : active
simulation      : fl_brats_2dunet

model:
  name     : brats_2dunet_tensorflow
  code_path: models.brats_2dunet_tensorflow
  version : &model_version_num 0
  params: {}

aggregator:
  id             : &agg_id_str 'agg_0'
  fed_id         : &fed_id_str 'fed_0'
  col_ids        : 
    - &col_id_1 'col_2'
    - &col_id_2 'col_3'
  
federation:
  rounds         : 2
  initial_weights: TensorFlow2DUNet_init.pbuf
  latest_weights : TensorFlow2DUNet_latest.pbuf
  best_weights   : TensorFlow2DUNet_best.pbuf

collaborators:
  col_ids: 
    - *col_id_1
    - *col_id_2
  agg_id : *agg_id_str
  fed_id : *fed_id_str
  model_version : *model_version_num


