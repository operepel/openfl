# Compose an FL plan in JSON/YAML.
# * Plan is consumed by bin/run_aggregator_from_flplan.py, 
# * bin/run_collaborator_from_flplan.py, and 
# * bin/create_initial_weights_file_from_plan.py 

# * values for first level keys: model, aggregator, and collaborator
# * pass in the generic kwargs for those constructors
# * (i.e. collaborator id will be collaborator specific)

# * values for first level keys: model and data pass in the generic 
# * kwargs for get_model and get_data functions

# * The model version is used to validate model updates
# * Aggregator, collaborator, and fed ids (as well as model version) are currently
# * used to validate message headers. Collaborator ids are also 
# * used for identifying the data folder of each collaborator
# * (using the local_data_config yaml file)

# * Added by the coordinator later: agg_id, agg_url, poll_interval.

# We may have several plans for one dataset, to search the best model architecture for exammple.

task            : brats
version         : '1'
description     : Train a model to perform semantic segmentation on brain fMRI images.
status          : active
federation      : fl_brats_2dunet


federation:
  fed_id: $fed_id 'fed_0'
  rounds: 2
  opt_mode_treatment: $opt_mode_treatment 'AGG'
  poling_interval: $poling_interval 4
  agg_id: $agg_id 'agg_0'
  agg_address: "spr-gpu01.jf.intel.com"
  agg_port: 8878 
  collaborator_ids: $col_ids
    - 'col_2'
  init_model_fname: $init_model_fname TensorFlow2DUNet_init.pbuf
  latest_model_fname: $latest_model_fname TensorFlow2DUNet_latest.pbuf
  best_model_fname: $best_model_fname TensorFlow2DUNet_best.pbuf
  model_version: 1


model:
  model_name: brats_2dunet_tensorflow
  code_path: models.brats_2dunet_tensorflow
  class_name: TensorFlow2DUNet
    
aggregator:
  agg_id: *agg_id
  fed_id: *fed_id
  col_ids: *col_ids
  init_model_fname: *init_model_fname 
  latest_model_fname: *latest_model_fname
  best_model_fname: *best_model_fname 

collaborator:
  agg_id: *agg_id
  fed_id: *fed_id
  model_version: *model_version
  poling_interval: *poling_interval
  opt_mode_treatment: *opt_mode_treatment 

tls:
  disable             : False
  disable_client_auth : False
  cert_folder         : test

data:
  data_name: brats 
  code_path: models.data 
  class_name: BratsData
  percent_train: 0.8
  batch_size: 64
