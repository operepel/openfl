# Compose an FL plan in JSON/YAML.
# * Plan is consumed by bin/run_aggregator_from_flplan.py, 
# *     bin/run_collaborator_from_flplan.py, and 
# *     bin/create_initial_weights_file_from_plan.py 
# * one code path points to get_model function and the other
# *     points to the data object constructor
# * model version is used to validate model updates
# * Aggregator, collaborator, and fed ids as well as model version are currently
# *     used to validate message headers. Collaborator ids are also 
# *     used for identifying the data folder of each collaborator.

# * FL parameters: fed_id, opt_treatment.

# * Added by the coordinator later: agg_id, agg_url, poll_interval.

# We may have several plans for one dataset, to search the best model architecture for exammple.

task            : brats
version         : '1'
description     : Train a model to perform semantic segmentation on brain fMRI images.
status          : active
federation      : fl_brats_2dunet

model:
  name     : brats_2dunet_tensorflow
  code_path: models.brats_2dunet_tensorflow
  version : 1
  params: {}
    
aggregator:
  id             : agg_brats
  addr           : "spr-gpu01.jf.intel.com"
  port           : 8878

  collaborators  : 
    - 'col_one_big'
  initial_weights: TensorFlow2DUNet_init.pbuf
  latest_weights : TensorFlow2DUNet_latest.pbuf
  best_weights   : TensorFlow2DUNet_best.pbuf

collaborator:
  opt_vars_treatment : RESET
  sync_per_iterations: 100 

tls:
  disable             : False
  disable_client_auth : False
  cert_folder         : test
