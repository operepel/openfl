image: alpine
#image: ubuntu:18.04 

# before_script:
#   - mkdir -p $HOME/.docker/
#   - 'echo "{ \"proxies\": { \"default\": { \"httpProxy\": \"http://proxy-us.intel.com:911\", \"httpsProxy\": \"http://proxy-us.intel.com:912\", \"noProxy\": \"intel.com,.intel.com,10.0.0.0/8,192.168.0.0/16,localhost,127.0.0.0/8,134.134.0.0/16\" } } }" > $HOME/.docker/config.json'
stages:
    - build
    - test

pages:
  stage: build
  script:
  - export http_proxy=http://proxy-us.intel.com:911
  - export https_proxy=http://proxy-us.intel.com:912
  - export no_proxy=docker:2375,docker:2376,intel.com,.intel.com,10.0.0.0/8,192.168.0.0/16,localhost,127.0.0.0/8,134.134.0.0/16
  - apk --no-cache add py3-pip python3-dev
  - apk --no-cache add musl-dev linux-headers g++

  - pip3 install sphinx sphinx_rtd_theme sphinxcontrib.napoleon
  - pip3 install numpy pyyaml
  - pip3 install protobuf
  
  - apk --no-cache add make
  - cd docs
  - sphinx-apidoc -f -o . ../tfedlrn
  - sphinx-apidoc -f -o . ../models
  - make html
  - mv _build/html/ ../public/
  artifacts:
    paths:
    - public
  only:
  - master

#image: ubuntu:18.04
#image: alpine
image: tensorflow/tensorflow:1.14.0-gpu-py3

before_test:
    stage: build
    tags: 
    - docker-gpu
    #- shell-runner-1
    script:
    - DISPLAY=:0
    #- cd /home/gitlab-runner/workspace
    #- sudo rm -rf spr_secure_intelligence-trusted_federated_learning
    #- rm -rf intel-privacy-and-security-services
    #- echo "clone the directory ..."
    #- git clone ssh://git@gitlab.devtools.intel.com:29418/secure-intelligence-team/spr_secure_intelligence-trusted_federated_learning.git
    #- cd /home/gitlab-runner/workspace/spr_secure_intelligence-trusted_federated_learning
    #- echo $CI_COMMIT_REF_NAME
    #- git checkout $CI_COMMIT_REF_NAME
    - export http_proxy=http://proxy-us.intel.com:911
    - export https_proxy=http://proxy-us.intel.com:912
    - export no_proxy=docker:2375,docker:2376,intel.com,.intel.com,10.0.0.0/8,192.168.0.0/16,localhost,127.0.0.0/8,134.134.0.0/16
    #- docker run hello-world
    - apt-get update -qy
    - apt-get install -y python3-venv python3-pip build-essential musl-dev g++
    - python3 -m pip --version
    - make install
    cache:
      key: make_install
      paths:
      - venv
    only:
    - 101-Build-GitLab-CI-testing-tool-fundamentals

image: tensorflow/tensorflow:1.14.0-gpu-py3
#
test_pt_cnn_mnist:
    stage: test
    tags: 
    - docker-gpu
    #- shell-runner-1
    before_script:
    - ls 
    - DISPLAY=:0
    - nvidia-smi
    - export http_proxy=http://proxy-us.intel.com:911
    - export https_proxy=http://proxy-us.intel.com:912
    - export no_proxy=docker:2375,docker:2376,intel.com,.intel.com,10.0.0.0/8,192.168.0.0/16,localhost,127.0.0.0/8,134.134.0.0/16
    - apt-get update -qy
    - apt-get install -y python3-venv python3-pip build-essential musl-dev g++
    - python3 -m pip --version
    - echo $CI_COMMIT_REF_NAME
    - make install
    cache:
      key: make_install
      policy: pull
      paths:
      - venv
    #- apt-get install -y git-all
    #- cd /home/gitlab-runner/workspace
    #- rm -rf spr_secure_intelligence-trusted_federated_learning
    #- git clone ssh://git@gitlab.devtools.intel.com:29418/secure-intelligence-team/spr_secure_intelligence-trusted_federated_learning.git
    #- cd spr_secure_intelligence-trusted_federated_learning/
    #- cd /home/gitlab-runner/workspace/spr_secure_intelligence-trusted_federated_learning
    script: 
    - ls
    - cd bin/
    - CUDA_VISIBLE_DEVICES=0 ../venv/bin/python create_initial_weights_file_from_flplan.py -p pt_cnn_withmnist.yaml
    - CUDA_VISIBLE_DEVICES=0 ../venv/bin/python run_simulation_from_flplan.py -p pt_cnn_withmnist.yaml
    only:
    - 101-Build-GitLab-CI-testing-tool-fundamentals

test_tf_resnet_mnist:
    stage: test
    tags:
    - docker-gpu
    before_script:
    - DISPLAY=:0
    - export http_proxy=http://proxy-us.intel.com:911
    - export https_proxy=http://proxy-us.intel.com:912
    - export no_proxy=docker:2375,docker:2376,intel.com,.intel.com,10.0.0.0/8,192.168.0.0/16,localhost,127.0.0.0/8,134.134.0.0/16
    - apt-get update -qy
    - apt-get install -y python3-venv python3-pip build-essential musl-dev g++
    - python3 -m pip --version
    cache:
      key: make_install
      policy: pull
      paths:
      - venv
    script: 
    - ls
    - cd bin/
    - CUDA_VISIBLE_DEVICES=0 ../venv/bin/python create_initial_weights_file_from_flplan.py -p tf_resnet_withcifar10.yaml
    - CUDA_VISIBLE_DEVICES=0 ../venv/bin/python run_simulation_from_flplan.py -p tf_resnet_withcifar10.yaml
    only:
    - 101-Build-GitLab-CI-testing-tool-fundamentals



before_test_shell:
    stage: build
    tags: 
    - shell-runner-1
    script:
    - docker run hello-world
    - DISPLAY=:0
    - cd /home/gitlab-runner/workspace
    - ls
    - rm -rf spr_secure_intelligence-trusted_federated_learning
    - ls
    - echo "clone the directory ..."
    - git clone ssh://git@gitlab.devtools.intel.com:29418/secure-intelligence-team/spr_secure_intelligence-trusted_federated_learning.git
    - cd /home/gitlab-runner/workspace/spr_secure_intelligence-trusted_federated_learning
    - echo $CI_COMMIT_REF_NAME
    - git checkout $CI_COMMIT_REF_NAME
    - export http_proxy=http://proxy-us.intel.com:911
    - export https_proxy=http://proxy-us.intel.com:912
    - export no_proxy=docker:2375,docker:2376,intel.com,.intel.com,10.0.0.0/8,192.168.0.0/16,localhost,127.0.0.0/8,134.134.0.0/16
    #- apt-get update -qy
    #- apt-get install -y python3-venv python3-pip build-essential musl-dev g++
    - python3 -m pip --version
    - make install
    cache:
      key: make_install
      paths:
      - venv
    only:
    - 101-Build-GitLab-CI-testing-tool-fundamentals


test_pt_cnn_mnist_shell:
    stage: test
    tags: 
    - shell-runner-1
    before_script:
    - ls 
    - DISPLAY=:0
    #- nvidia-smi
    #- export http_proxy=http://proxy-us.intel.com:911
    #- export https_proxy=http://proxy-us.intel.com:912
    #- export no_proxy=docker:2375,docker:2376,intel.com,.intel.com,10.0.0.0/8,192.168.0.0/16,localhost,127.0.0.0/8,134.134.0.0/16
    ##- apt-get update -qy
    #- apt-get install -y python3-venv python3-pip build-essential musl-dev g++
    #- python3 -m pip --version
    #- echo $CI_COMMIT_REF_NAME
    cache:
      key: make_install
      policy: pull
      paths:
      - venv
    #- apt-get install -y git-all
    #- cd /home/gitlab-runner/workspace
    #- rm -rf spr_secure_intelligence-trusted_federated_learning
    #- git clone ssh://git@gitlab.devtools.intel.com:29418/secure-intelligence-team/spr_secure_intelligence-trusted_federated_learning.git
    #- cd spr_secure_intelligence-trusted_federated_learning/
    #- cd /home/gitlab-runner/workspace/spr_secure_intelligence-trusted_federated_learning
    script: 
    - ls
    - cd /home/gitlab-runner/workspace/spr_secure_intelligence-trusted_federated_learning
    - cd bin/
    - CUDA_VISIBLE_DEVICES=0 ../venv/bin/python create_initial_weights_file_from_flplan.py -p pt_cnn_withmnist.yaml
    - CUDA_VISIBLE_DEVICES=0 ../venv/bin/python run_simulation_from_flplan.py -p pt_cnn_withmnist.yaml
    only:
    - 101-Build-GitLab-CI-testing-tool-fundamentals
